# aktus-inference-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aktus-inference
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aktus-inference-service
  template:
    metadata:
      annotations:
        eks.amazonaws.com/role-arn: {{ index .Values.aktusInference.serviceAccount.annotations "eks.amazonaws.com/role-arn" | quote }}
      labels:
        app: aktus-inference-service
    spec:
      serviceAccountName: {{ .Values.aktusInference.serviceAccount.name }}
      {{- with .Values.aktusInference.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.aktusInference.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      tolerations:
      - key: "CriticalAddonsOnly"
        operator: Exists
        effect: NoSchedule
      - key: "nvidia.com/gpu"
        operator: Exists
        effect: NoSchedule
      - key: "nvidia.com/gpu"
        value: "true"
        effect: NoSchedule
      terminationGracePeriodSeconds: 60
      containers:
        - name: aktus-inference-service
          image: {{ .Values.aktusInference.image }}
          imagePullPolicy: {{ .Values.aktusInference.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.aktusInference.grpcPort }}
              name: grpc
          env:
            - name: HF_LOGIN_KEY
              valueFrom:
                secretKeyRef:
                  name: huggingface-credentials
                  key: HF_TOKEN
            - name: MINICPM_BASE_MODEL_PATH
              value: "{{ .Values.aktusInference.modelConfig.minicpm.baseModelPath }}"
            - name: MINICPM_PEFT_MODEL_PATH_FLOWCHART
              value: "{{ .Values.aktusInference.modelConfig.minicpm.peftModelPath }}"
            - name: MINICPM_PEFT_MODEL_PATH_TABLE
              value: "{{ .Values.aktusInference.modelConfig.minicpm.peftModelPath }}"
            - name: MINICPM_PROCESSOR_PATH
              value: "{{ .Values.aktusInference.modelConfig.minicpm.processorPath }}"
            - name: YOLO_LAYOUT_PARSER_DEFAULT_MODEL_PATH
              value: "{{ .Values.aktusInference.modelConfig.yolo.modelPath }}"
            - name: SERVER_URI
              value: "{{ .Values.aktusInference.serverConfig.uri }}"
            - name: ENABLE_FLASH_ATTENTION
              value: "{{ .Values.aktusInference.serverConfig.enableFlashAttention }}"
            - name: HF_LOCAL_FILES_ONLY
              value: "{{ .Values.aktusInference.serverConfig.hfLocalFilesOnly }}"
            - name: DEFAULT_DEVICE
              value: "{{ .Values.aktusInference.serverConfig.defaultDevice }}"
            - name: AWS_STS_REGIONAL_ENDPOINTS
              value: "regional"
            - name: GRPC_VERBOSITY
              value: "DEBUG"
          volumeMounts:
            - name: efs-data
              mountPath: {{ .Values.aktusInference.paths.models }}
              subPath: models
            - name: efs-data
              mountPath: {{ .Values.aktusInference.paths.docUpload }}
              subPath: document_upload
            - name: efs-data
              mountPath: {{ .Values.aktusInference.paths.docProcessing }}
              subPath: doc_processing
          resources:
            {{- toYaml .Values.aktusInference.resources | nindent 12 }}
      volumes:
        - name: efs-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ .Chart.Name }}-efs-pvc

        - name: aws-iam-token
          projected:
            sources:
            - serviceAccountToken:
                path: token
                audience: sts.amazonaws.com