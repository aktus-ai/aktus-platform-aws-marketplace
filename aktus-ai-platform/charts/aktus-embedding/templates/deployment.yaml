# aktus-embedding-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aktus-embedding
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aktus-embedding-service
  template:
    metadata:
      labels:
        app: aktus-embedding-service
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: aktus-ai-platform-sa
      containers:
        - name: aktus-embedding-service
          image: {{ .Values.aktusEmbedding.image }}
          imagePullPolicy: {{ .Values.aktusEmbedding.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.aktusEmbedding.port }}
              name: http
          env:
            - name: SUMMARIZATION_NUM_PAGES
              value: "50"
            - name: CHUNKING_CONCURRENCY
              value: "50"
            - name: CHUNKING_BATCH_SIZE
              value: "15"
            - name: EMBEDDING_BATCH_SIZE
              value: "15"
            - name: USERNAME
              value: "{{ .Values.aktusEmbedding.auth.username }}"
            - name: PASSWORD
              value: "{{ .Values.aktusEmbedding.auth.password }}"
            - name: HOST_ADDRESS
              value: "{{ .Values.aktusEmbedding.uvicorn.host }}"
            - name: HOST_PORT
              value: "{{ .Values.aktusEmbedding.uvicorn.port }}"
            - name: UVICORN_LOG_LEVEL
              value: "{{ .Values.aktusEmbedding.uvicorn.logLevel }}"
            - name: UVICORN_TIMEOUT_KEEPALIVE
              value: "{{ .Values.aktusEmbedding.uvicorn.timeoutKeepalive }}"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-openai-secret
                  key: OPENAI_API_KEY
            - name: SERVICE_OCR_ENDPOINT
              value: "{{ .Values.aktusEmbedding.mdiService.endpoint }}"
            - name: EXTRACTED_DATA_DIR
              value: "{{ .Values.aktusEmbedding.paths.extractedData }}"
            - name: DOC_UPLOAD_DIR
              value: "{{ .Values.aktusEmbedding.paths.docUpload }}"
            - name: DB_MANAGER_HOST
              value: "{{ .Values.aktusEmbedding.dbManager.host }}"
            - name: QDRANT_URL
              value: "http://qdrant:6333"
            - name: VECTOR_DB_TYPE
              value: "QDRANT"
            - name: ENV
              value: "dev"
            - name: AWS_STS_REGIONAL_ENDPOINTS
              value: "regional"
          volumeMounts:
            - name: efs-data
              mountPath: {{ .Values.aktusEmbedding.paths.extractedData }}
              subPath: extracted_data
            - name: efs-data
              mountPath: {{ .Values.aktusEmbedding.paths.docUpload }}
              subPath: document_upload
            - name: efs-data
              mountPath: {{ .Values.aktusEmbedding.paths.docProcessing }}
              subPath: doc_processing
            - name: nomic-dir
              mountPath: /root/.nomic
            - name: ephemeral
              mountPath: "/tmp"
          resources:
            {{- toYaml .Values.aktusEmbedding.resources | nindent 12 }}

      volumes:
        - name: efs-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ .Chart.Name }}-efs-pvc
        - name: nomic-dir
          emptyDir: {}
        - name: ephemeral
          emptyDir:
            sizeLimit: 5Gi